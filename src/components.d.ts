/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface BsAccordion {
    'className': string;
    'id': string;
  }
  interface BsAccordionAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'id'?: string;
  }

  interface BsAlert {
    'className': string;
    'content': string;
    'header': string;
    'isDismissible': boolean;
    'type': number;
  }
  interface BsAlertAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'content'?: string;
    'header'?: string;
    'isDismissible'?: boolean;
    'type'?: number;
  }

  interface BsBadge {
    'className': string;
    'content': string;
    'header': string;
    'href': string;
    'isPill': boolean;
    'type': number;
  }
  interface BsBadgeAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'content'?: string;
    'header'?: string;
    'href'?: string;
    'isPill'?: boolean;
    'type'?: number;
  }

  interface BsBreadcrumb {
    'className': string;
  }
  interface BsBreadcrumbAttributes extends StencilHTMLAttributes {
    'className'?: string;
  }

  interface BsButton {
    'className': string;
    'controls': Array<string>;
    'data': any;
    'href': string;
    'id': string;
    'isBlock': boolean;
    'isDisabled': boolean;
    'isExpanded': boolean;
    'isLarge': boolean;
    'isLink': boolean;
    'isOutline': boolean;
    'isSmall': boolean;
    'target': string;
    'text': string;
    'toggle': string;
    'trigger': string;
    'type': number;
  }
  interface BsButtonAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'controls'?: Array<string>;
    'data'?: any;
    'href'?: string;
    'id'?: string;
    'isBlock'?: boolean;
    'isDisabled'?: boolean;
    'isExpanded'?: boolean;
    'isLarge'?: boolean;
    'isLink'?: boolean;
    'isOutline'?: boolean;
    'isSmall'?: boolean;
    'target'?: string;
    'text'?: string;
    'toggle'?: string;
    'trigger'?: string;
    'type'?: number;
  }

  interface BsButtonGroup {
    'buttonType': number;
    'className': string;
    'id': string;
    'isLarge': boolean;
    'isSmall': boolean;
    'isVertical': boolean;
    'label': string;
  }
  interface BsButtonGroupAttributes extends StencilHTMLAttributes {
    'buttonType'?: number;
    'className'?: string;
    'id'?: string;
    'isLarge'?: boolean;
    'isSmall'?: boolean;
    'isVertical'?: boolean;
    'label'?: string;
  }

  interface BsCard {
    'className': string;
    'footer': string;
    'header': string;
    'imgBottom': object;
    'imgTop': object;
  }
  interface BsCardAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'footer'?: string;
    'header'?: string;
    'imgBottom'?: object;
    'imgTop'?: object;
  }

  interface BsCardGroup {
    'className': string;
  }
  interface BsCardGroupAttributes extends StencilHTMLAttributes {
    'className'?: string;
  }

  interface BsCarousel {
    'className': string;
    'enableControls': boolean;
    'enableCrossfade': boolean;
    'enableIndicators': boolean;
    'id': string;
  }
  interface BsCarouselAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'enableControls'?: boolean;
    'enableCrossfade'?: boolean;
    'enableIndicators'?: boolean;
    'id'?: string;
  }

  interface BsCheckboxGroup {
    'className': string;
    'colSize': number;
    'hideLabel': boolean;
    'label': string;
    'multi': boolean;
    'type': number;
  }
  interface BsCheckboxGroupAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'colSize'?: number;
    'hideLabel'?: boolean;
    'label'?: string;
    'multi'?: boolean;
    'type'?: number;
  }

  interface BsCollapse {
    'className': string;
    'content': string;
    'id': string;
    'isMulti': boolean;
  }
  interface BsCollapseAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'content'?: string;
    'id'?: string;
    'isMulti'?: boolean;
  }

  interface BsDropdown {
    'className': string;
    'dropLeft': boolean;
    'dropRight': boolean;
    'dropUp': boolean;
    'formFl': boolean;
    'id': string;
    'isSplit': boolean;
    'label': string;
    'menuOnly': boolean;
    'multi': boolean;
    'setLabelToValue': boolean;
    'type': number;
    'value': string;
  }
  interface BsDropdownAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'dropLeft'?: boolean;
    'dropRight'?: boolean;
    'dropUp'?: boolean;
    'formFl'?: boolean;
    'id'?: string;
    'isSplit'?: boolean;
    'label'?: string;
    'menuOnly'?: boolean;
    'multi'?: boolean;
    'setLabelToValue'?: boolean;
    'type'?: number;
    'value'?: string;
  }

  interface BsForm {}
  interface BsFormAttributes extends StencilHTMLAttributes {}

  interface BsInputGroup {
    'appendedLabel': string;
    'className': string;
    'description': string;
    'id': string;
    'isLarge': boolean;
    'isPlainText': boolean;
    'isReadonly': boolean;
    'isSmall': boolean;
    'label': string;
    'placeholder': string;
    'prependedLabel': string;
    'rows': number;
    'type': number;
    'value': string;
  }
  interface BsInputGroupAttributes extends StencilHTMLAttributes {
    'appendedLabel'?: string;
    'className'?: string;
    'description'?: string;
    'id'?: string;
    'isLarge'?: boolean;
    'isPlainText'?: boolean;
    'isReadonly'?: boolean;
    'isSmall'?: boolean;
    'label'?: string;
    'placeholder'?: string;
    'prependedLabel'?: string;
    'rows'?: number;
    'type'?: number;
    'value'?: string;
  }

  interface BsJumbotron {
    'className': string;
    'content': string;
    'isFluid': boolean;
    'lead': string;
  }
  interface BsJumbotronAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'content'?: string;
    'isFluid'?: boolean;
    'lead'?: string;
  }

  interface BsListGroup {
    'className': string;
    'colWidth': number;
    'enableFade': boolean;
    'isFlush': boolean;
    'isTabs': boolean;
  }
  interface BsListGroupAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'colWidth'?: number;
    'enableFade'?: boolean;
    'isFlush'?: boolean;
    'isTabs'?: boolean;
  }

  interface BsModal {
    'body': string;
    'className': string;
    'disableFade': boolean;
    'footer': string;
    'hideCloseButton': boolean;
    'id': string;
    'isCentered': boolean;
    'isLarge': boolean;
    'isSmall': boolean;
  }
  interface BsModalAttributes extends StencilHTMLAttributes {
    'body'?: string;
    'className'?: string;
    'disableFade'?: boolean;
    'footer'?: string;
    'hideCloseButton'?: boolean;
    'id'?: string;
    'isCentered'?: boolean;
    'isLarge'?: boolean;
    'isSmall'?: boolean;
  }

  interface BsNav {
    'className': string;
    'enableFade': boolean;
    'enableFill': boolean;
    'id': string;
    'isJustified': boolean;
    'isPills': boolean;
    'isTabs': boolean;
    'isVertical': boolean;
  }
  interface BsNavAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'enableFade'?: boolean;
    'enableFill'?: boolean;
    'id'?: string;
    'isJustified'?: boolean;
    'isPills'?: boolean;
    'isTabs'?: boolean;
    'isVertical'?: boolean;
  }

  interface BsNavbar {
    'brand': string;
    'brandUrl': string;
    'className': string;
    'enableSearch': boolean;
    'id': string;
    'type': number;
  }
  interface BsNavbarAttributes extends StencilHTMLAttributes {
    'brand'?: string;
    'brandUrl'?: string;
    'className'?: string;
    'enableSearch'?: boolean;
    'id'?: string;
    'type'?: number;
  }

  interface BsPagination {
    'alignment': number;
    'className': string;
    'icon': string;
    'isLarge': boolean;
    'isSmall': boolean;
    'label': string;
    'numberOfPages': number;
  }
  interface BsPaginationAttributes extends StencilHTMLAttributes {
    'alignment'?: number;
    'className'?: string;
    'icon'?: string;
    'isLarge'?: boolean;
    'isSmall'?: boolean;
    'label'?: string;
    'numberOfPages'?: number;
  }

  interface BsPanel {
    'className': string;
    'type': number;
  }
  interface BsPanelAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'type'?: number;
  }

  interface BsPopover {
    'className': string;
    'isDismissible': boolean;
    'type': number;
  }
  interface BsPopoverAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'isDismissible'?: boolean;
    'type'?: number;
  }

  interface BsProgress {
    'className': string;
    'isAnimated': boolean;
    'isStriped': boolean;
    'label': string;
    'max': number;
    'min': number;
    'size': number;
  }
  interface BsProgressAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'isAnimated'?: boolean;
    'isStriped'?: boolean;
    'label'?: string;
    'max'?: number;
    'min'?: number;
    'size'?: number;
  }

  interface BsProgressGroup {
    'className': string;
    'isMultiple': boolean;
  }
  interface BsProgressGroupAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'isMultiple'?: boolean;
  }

  interface BsSpinner {
    'className': string;
    'isGrowing': boolean;
    'isSmall': boolean;
    'text': string;
    'type': number;
  }
  interface BsSpinnerAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'isGrowing'?: boolean;
    'isSmall'?: boolean;
    'text'?: string;
    'type'?: number;
  }

  interface BsTable {
    'className': string;
  }
  interface BsTableAttributes extends StencilHTMLAttributes {
    'className'?: string;
  }

  interface BsToast {
    'bodyText': string;
    'className': string;
    'closeButtonHidden': boolean;
    'closeButtonText': boolean;
    'headerImgClass': string;
    'headerImgSrc': string;
    'headerText': string;
  }
  interface BsToastAttributes extends StencilHTMLAttributes {
    'bodyText'?: string;
    'className'?: string;
    'closeButtonHidden'?: boolean;
    'closeButtonText'?: boolean;
    'headerImgClass'?: string;
    'headerImgSrc'?: string;
    'headerText'?: string;
  }

  interface BsToolbar {
    'className': string;
    'spacing': number;
  }
  interface BsToolbarAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'spacing'?: number;
  }

  interface BsTooltip {
    'className': string;
    'type': number;
  }
  interface BsTooltipAttributes extends StencilHTMLAttributes {
    'className'?: string;
    'type'?: number;
  }

  interface BsWebpartList {
    'camlQuery': string;
    'cfgElementId': string;
    'className': string;
    'elementId': string;
    'wpClassName': string;
  }
  interface BsWebpartListAttributes extends StencilHTMLAttributes {
    'camlQuery'?: string;
    'cfgElementId'?: string;
    'className'?: string;
    'elementId'?: string;
    'wpClassName'?: string;
  }

  interface BsWebpartSearch {
    'camlQuery': string;
    'cfgElementId': string;
    'className': string;
    'elementId': string;
    'wpClassName': string;
  }
  interface BsWebpartSearchAttributes extends StencilHTMLAttributes {
    'camlQuery'?: string;
    'cfgElementId'?: string;
    'className'?: string;
    'elementId'?: string;
    'wpClassName'?: string;
  }

  interface BsWebpartTabs {
    'cfgElementId': string;
    'className': string;
    'elementId': string;
    'type': number;
    'wpClassName': string;
  }
  interface BsWebpartTabsAttributes extends StencilHTMLAttributes {
    'cfgElementId'?: string;
    'className'?: string;
    'elementId'?: string;
    'type'?: number;
    'wpClassName'?: string;
  }

  interface BsWebpartTaxonomy {
    'cfgElementId': string;
    'className': string;
    'elementId': string;
    'wpClassName': string;
  }
  interface BsWebpartTaxonomyAttributes extends StencilHTMLAttributes {
    'cfgElementId'?: string;
    'className'?: string;
    'elementId'?: string;
    'wpClassName'?: string;
  }

  interface BsWebpart {
    'cfgElementId': string;
    'className': string;
    'elementId': string;
    'wpClassName': string;
  }
  interface BsWebpartAttributes extends StencilHTMLAttributes {
    'cfgElementId'?: string;
    'className'?: string;
    'elementId'?: string;
    'wpClassName'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'BsAccordion': Components.BsAccordion;
    'BsAlert': Components.BsAlert;
    'BsBadge': Components.BsBadge;
    'BsBreadcrumb': Components.BsBreadcrumb;
    'BsButton': Components.BsButton;
    'BsButtonGroup': Components.BsButtonGroup;
    'BsCard': Components.BsCard;
    'BsCardGroup': Components.BsCardGroup;
    'BsCarousel': Components.BsCarousel;
    'BsCheckboxGroup': Components.BsCheckboxGroup;
    'BsCollapse': Components.BsCollapse;
    'BsDropdown': Components.BsDropdown;
    'BsForm': Components.BsForm;
    'BsInputGroup': Components.BsInputGroup;
    'BsJumbotron': Components.BsJumbotron;
    'BsListGroup': Components.BsListGroup;
    'BsModal': Components.BsModal;
    'BsNav': Components.BsNav;
    'BsNavbar': Components.BsNavbar;
    'BsPagination': Components.BsPagination;
    'BsPanel': Components.BsPanel;
    'BsPopover': Components.BsPopover;
    'BsProgress': Components.BsProgress;
    'BsProgressGroup': Components.BsProgressGroup;
    'BsSpinner': Components.BsSpinner;
    'BsTable': Components.BsTable;
    'BsToast': Components.BsToast;
    'BsToolbar': Components.BsToolbar;
    'BsTooltip': Components.BsTooltip;
    'BsWebpartList': Components.BsWebpartList;
    'BsWebpartSearch': Components.BsWebpartSearch;
    'BsWebpartTabs': Components.BsWebpartTabs;
    'BsWebpartTaxonomy': Components.BsWebpartTaxonomy;
    'BsWebpart': Components.BsWebpart;
  }

  interface StencilIntrinsicElements {
    'bs-accordion': Components.BsAccordionAttributes;
    'bs-alert': Components.BsAlertAttributes;
    'bs-badge': Components.BsBadgeAttributes;
    'bs-breadcrumb': Components.BsBreadcrumbAttributes;
    'bs-button': Components.BsButtonAttributes;
    'bs-button-group': Components.BsButtonGroupAttributes;
    'bs-card': Components.BsCardAttributes;
    'bs-card-group': Components.BsCardGroupAttributes;
    'bs-carousel': Components.BsCarouselAttributes;
    'bs-checkbox-group': Components.BsCheckboxGroupAttributes;
    'bs-collapse': Components.BsCollapseAttributes;
    'bs-dropdown': Components.BsDropdownAttributes;
    'bs-form': Components.BsFormAttributes;
    'bs-input-group': Components.BsInputGroupAttributes;
    'bs-jumbotron': Components.BsJumbotronAttributes;
    'bs-list-group': Components.BsListGroupAttributes;
    'bs-modal': Components.BsModalAttributes;
    'bs-nav': Components.BsNavAttributes;
    'bs-navbar': Components.BsNavbarAttributes;
    'bs-pagination': Components.BsPaginationAttributes;
    'bs-panel': Components.BsPanelAttributes;
    'bs-popover': Components.BsPopoverAttributes;
    'bs-progress': Components.BsProgressAttributes;
    'bs-progress-group': Components.BsProgressGroupAttributes;
    'bs-spinner': Components.BsSpinnerAttributes;
    'bs-table': Components.BsTableAttributes;
    'bs-toast': Components.BsToastAttributes;
    'bs-toolbar': Components.BsToolbarAttributes;
    'bs-tooltip': Components.BsTooltipAttributes;
    'bs-webpart-list': Components.BsWebpartListAttributes;
    'bs-webpart-search': Components.BsWebpartSearchAttributes;
    'bs-webpart-tabs': Components.BsWebpartTabsAttributes;
    'bs-webpart-taxonomy': Components.BsWebpartTaxonomyAttributes;
    'bs-webpart': Components.BsWebpartAttributes;
  }


  interface HTMLBsAccordionElement extends Components.BsAccordion, HTMLStencilElement {}
  var HTMLBsAccordionElement: {
    prototype: HTMLBsAccordionElement;
    new (): HTMLBsAccordionElement;
  };

  interface HTMLBsAlertElement extends Components.BsAlert, HTMLStencilElement {}
  var HTMLBsAlertElement: {
    prototype: HTMLBsAlertElement;
    new (): HTMLBsAlertElement;
  };

  interface HTMLBsBadgeElement extends Components.BsBadge, HTMLStencilElement {}
  var HTMLBsBadgeElement: {
    prototype: HTMLBsBadgeElement;
    new (): HTMLBsBadgeElement;
  };

  interface HTMLBsBreadcrumbElement extends Components.BsBreadcrumb, HTMLStencilElement {}
  var HTMLBsBreadcrumbElement: {
    prototype: HTMLBsBreadcrumbElement;
    new (): HTMLBsBreadcrumbElement;
  };

  interface HTMLBsButtonElement extends Components.BsButton, HTMLStencilElement {}
  var HTMLBsButtonElement: {
    prototype: HTMLBsButtonElement;
    new (): HTMLBsButtonElement;
  };

  interface HTMLBsButtonGroupElement extends Components.BsButtonGroup, HTMLStencilElement {}
  var HTMLBsButtonGroupElement: {
    prototype: HTMLBsButtonGroupElement;
    new (): HTMLBsButtonGroupElement;
  };

  interface HTMLBsCardElement extends Components.BsCard, HTMLStencilElement {}
  var HTMLBsCardElement: {
    prototype: HTMLBsCardElement;
    new (): HTMLBsCardElement;
  };

  interface HTMLBsCardGroupElement extends Components.BsCardGroup, HTMLStencilElement {}
  var HTMLBsCardGroupElement: {
    prototype: HTMLBsCardGroupElement;
    new (): HTMLBsCardGroupElement;
  };

  interface HTMLBsCarouselElement extends Components.BsCarousel, HTMLStencilElement {}
  var HTMLBsCarouselElement: {
    prototype: HTMLBsCarouselElement;
    new (): HTMLBsCarouselElement;
  };

  interface HTMLBsCheckboxGroupElement extends Components.BsCheckboxGroup, HTMLStencilElement {}
  var HTMLBsCheckboxGroupElement: {
    prototype: HTMLBsCheckboxGroupElement;
    new (): HTMLBsCheckboxGroupElement;
  };

  interface HTMLBsCollapseElement extends Components.BsCollapse, HTMLStencilElement {}
  var HTMLBsCollapseElement: {
    prototype: HTMLBsCollapseElement;
    new (): HTMLBsCollapseElement;
  };

  interface HTMLBsDropdownElement extends Components.BsDropdown, HTMLStencilElement {}
  var HTMLBsDropdownElement: {
    prototype: HTMLBsDropdownElement;
    new (): HTMLBsDropdownElement;
  };

  interface HTMLBsFormElement extends Components.BsForm, HTMLStencilElement {}
  var HTMLBsFormElement: {
    prototype: HTMLBsFormElement;
    new (): HTMLBsFormElement;
  };

  interface HTMLBsInputGroupElement extends Components.BsInputGroup, HTMLStencilElement {}
  var HTMLBsInputGroupElement: {
    prototype: HTMLBsInputGroupElement;
    new (): HTMLBsInputGroupElement;
  };

  interface HTMLBsJumbotronElement extends Components.BsJumbotron, HTMLStencilElement {}
  var HTMLBsJumbotronElement: {
    prototype: HTMLBsJumbotronElement;
    new (): HTMLBsJumbotronElement;
  };

  interface HTMLBsListGroupElement extends Components.BsListGroup, HTMLStencilElement {}
  var HTMLBsListGroupElement: {
    prototype: HTMLBsListGroupElement;
    new (): HTMLBsListGroupElement;
  };

  interface HTMLBsModalElement extends Components.BsModal, HTMLStencilElement {}
  var HTMLBsModalElement: {
    prototype: HTMLBsModalElement;
    new (): HTMLBsModalElement;
  };

  interface HTMLBsNavElement extends Components.BsNav, HTMLStencilElement {}
  var HTMLBsNavElement: {
    prototype: HTMLBsNavElement;
    new (): HTMLBsNavElement;
  };

  interface HTMLBsNavbarElement extends Components.BsNavbar, HTMLStencilElement {}
  var HTMLBsNavbarElement: {
    prototype: HTMLBsNavbarElement;
    new (): HTMLBsNavbarElement;
  };

  interface HTMLBsPaginationElement extends Components.BsPagination, HTMLStencilElement {}
  var HTMLBsPaginationElement: {
    prototype: HTMLBsPaginationElement;
    new (): HTMLBsPaginationElement;
  };

  interface HTMLBsPanelElement extends Components.BsPanel, HTMLStencilElement {}
  var HTMLBsPanelElement: {
    prototype: HTMLBsPanelElement;
    new (): HTMLBsPanelElement;
  };

  interface HTMLBsPopoverElement extends Components.BsPopover, HTMLStencilElement {}
  var HTMLBsPopoverElement: {
    prototype: HTMLBsPopoverElement;
    new (): HTMLBsPopoverElement;
  };

  interface HTMLBsProgressElement extends Components.BsProgress, HTMLStencilElement {}
  var HTMLBsProgressElement: {
    prototype: HTMLBsProgressElement;
    new (): HTMLBsProgressElement;
  };

  interface HTMLBsProgressGroupElement extends Components.BsProgressGroup, HTMLStencilElement {}
  var HTMLBsProgressGroupElement: {
    prototype: HTMLBsProgressGroupElement;
    new (): HTMLBsProgressGroupElement;
  };

  interface HTMLBsSpinnerElement extends Components.BsSpinner, HTMLStencilElement {}
  var HTMLBsSpinnerElement: {
    prototype: HTMLBsSpinnerElement;
    new (): HTMLBsSpinnerElement;
  };

  interface HTMLBsTableElement extends Components.BsTable, HTMLStencilElement {}
  var HTMLBsTableElement: {
    prototype: HTMLBsTableElement;
    new (): HTMLBsTableElement;
  };

  interface HTMLBsToastElement extends Components.BsToast, HTMLStencilElement {}
  var HTMLBsToastElement: {
    prototype: HTMLBsToastElement;
    new (): HTMLBsToastElement;
  };

  interface HTMLBsToolbarElement extends Components.BsToolbar, HTMLStencilElement {}
  var HTMLBsToolbarElement: {
    prototype: HTMLBsToolbarElement;
    new (): HTMLBsToolbarElement;
  };

  interface HTMLBsTooltipElement extends Components.BsTooltip, HTMLStencilElement {}
  var HTMLBsTooltipElement: {
    prototype: HTMLBsTooltipElement;
    new (): HTMLBsTooltipElement;
  };

  interface HTMLBsWebpartListElement extends Components.BsWebpartList, HTMLStencilElement {}
  var HTMLBsWebpartListElement: {
    prototype: HTMLBsWebpartListElement;
    new (): HTMLBsWebpartListElement;
  };

  interface HTMLBsWebpartSearchElement extends Components.BsWebpartSearch, HTMLStencilElement {}
  var HTMLBsWebpartSearchElement: {
    prototype: HTMLBsWebpartSearchElement;
    new (): HTMLBsWebpartSearchElement;
  };

  interface HTMLBsWebpartTabsElement extends Components.BsWebpartTabs, HTMLStencilElement {}
  var HTMLBsWebpartTabsElement: {
    prototype: HTMLBsWebpartTabsElement;
    new (): HTMLBsWebpartTabsElement;
  };

  interface HTMLBsWebpartTaxonomyElement extends Components.BsWebpartTaxonomy, HTMLStencilElement {}
  var HTMLBsWebpartTaxonomyElement: {
    prototype: HTMLBsWebpartTaxonomyElement;
    new (): HTMLBsWebpartTaxonomyElement;
  };

  interface HTMLBsWebpartElement extends Components.BsWebpart, HTMLStencilElement {}
  var HTMLBsWebpartElement: {
    prototype: HTMLBsWebpartElement;
    new (): HTMLBsWebpartElement;
  };

  interface HTMLElementTagNameMap {
    'bs-accordion': HTMLBsAccordionElement
    'bs-alert': HTMLBsAlertElement
    'bs-badge': HTMLBsBadgeElement
    'bs-breadcrumb': HTMLBsBreadcrumbElement
    'bs-button': HTMLBsButtonElement
    'bs-button-group': HTMLBsButtonGroupElement
    'bs-card': HTMLBsCardElement
    'bs-card-group': HTMLBsCardGroupElement
    'bs-carousel': HTMLBsCarouselElement
    'bs-checkbox-group': HTMLBsCheckboxGroupElement
    'bs-collapse': HTMLBsCollapseElement
    'bs-dropdown': HTMLBsDropdownElement
    'bs-form': HTMLBsFormElement
    'bs-input-group': HTMLBsInputGroupElement
    'bs-jumbotron': HTMLBsJumbotronElement
    'bs-list-group': HTMLBsListGroupElement
    'bs-modal': HTMLBsModalElement
    'bs-nav': HTMLBsNavElement
    'bs-navbar': HTMLBsNavbarElement
    'bs-pagination': HTMLBsPaginationElement
    'bs-panel': HTMLBsPanelElement
    'bs-popover': HTMLBsPopoverElement
    'bs-progress': HTMLBsProgressElement
    'bs-progress-group': HTMLBsProgressGroupElement
    'bs-spinner': HTMLBsSpinnerElement
    'bs-table': HTMLBsTableElement
    'bs-toast': HTMLBsToastElement
    'bs-toolbar': HTMLBsToolbarElement
    'bs-tooltip': HTMLBsTooltipElement
    'bs-webpart-list': HTMLBsWebpartListElement
    'bs-webpart-search': HTMLBsWebpartSearchElement
    'bs-webpart-tabs': HTMLBsWebpartTabsElement
    'bs-webpart-taxonomy': HTMLBsWebpartTaxonomyElement
    'bs-webpart': HTMLBsWebpartElement
  }

  interface ElementTagNameMap {
    'bs-accordion': HTMLBsAccordionElement;
    'bs-alert': HTMLBsAlertElement;
    'bs-badge': HTMLBsBadgeElement;
    'bs-breadcrumb': HTMLBsBreadcrumbElement;
    'bs-button': HTMLBsButtonElement;
    'bs-button-group': HTMLBsButtonGroupElement;
    'bs-card': HTMLBsCardElement;
    'bs-card-group': HTMLBsCardGroupElement;
    'bs-carousel': HTMLBsCarouselElement;
    'bs-checkbox-group': HTMLBsCheckboxGroupElement;
    'bs-collapse': HTMLBsCollapseElement;
    'bs-dropdown': HTMLBsDropdownElement;
    'bs-form': HTMLBsFormElement;
    'bs-input-group': HTMLBsInputGroupElement;
    'bs-jumbotron': HTMLBsJumbotronElement;
    'bs-list-group': HTMLBsListGroupElement;
    'bs-modal': HTMLBsModalElement;
    'bs-nav': HTMLBsNavElement;
    'bs-navbar': HTMLBsNavbarElement;
    'bs-pagination': HTMLBsPaginationElement;
    'bs-panel': HTMLBsPanelElement;
    'bs-popover': HTMLBsPopoverElement;
    'bs-progress': HTMLBsProgressElement;
    'bs-progress-group': HTMLBsProgressGroupElement;
    'bs-spinner': HTMLBsSpinnerElement;
    'bs-table': HTMLBsTableElement;
    'bs-toast': HTMLBsToastElement;
    'bs-toolbar': HTMLBsToolbarElement;
    'bs-tooltip': HTMLBsTooltipElement;
    'bs-webpart-list': HTMLBsWebpartListElement;
    'bs-webpart-search': HTMLBsWebpartSearchElement;
    'bs-webpart-tabs': HTMLBsWebpartTabsElement;
    'bs-webpart-taxonomy': HTMLBsWebpartTaxonomyElement;
    'bs-webpart': HTMLBsWebpartElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
