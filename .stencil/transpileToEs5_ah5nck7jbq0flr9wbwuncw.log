import { a as getProps } from './chunk-3f966420.js';
import { a as generateElement } from './chunk-4fbd7d04.js';
var WPTaxonomy = /** @class */ (function () {
    function WPTaxonomy() {
    }
    WPTaxonomy.prototype.render = function () {
        if (this.el.hasAttribute("data-init")) {
            return;
        }
        var props = getProps(this.el, {
            cfgElementId: this.cfgElementId,
            className: this.className,
            elementId: this.elementId,
            wpClassName: this.wpClassName
        });
        this.el.removeAttribute("id");
        generateElement(this.el, props.elementId);
        generateElement(this.el, props.cfgElementId, true);
        $REST.WebParts.WPTaxonomy(props);
        this.el.setAttribute("data-init", "true");
    };
    Object.defineProperty(WPTaxonomy, "is", {
        get: function () { return "bs-webpart-taxonomy"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WPTaxonomy, "properties", {
        get: function () {
            return {
                "cfgElementId": {
                    "type": String,
                    "attr": "cfg-element-id"
                },
                "className": {
                    "type": String,
                    "attr": "class-name"
                },
                "el": {
                    "elementRef": true
                },
                "elementId": {
                    "type": String,
                    "attr": "element-id"
                },
                "wpClassName": {
                    "type": String,
                    "attr": "wp-class-name"
                }
            };
        },
        enumerable: true,
        configurable: true
    });
    return WPTaxonomy;
}());
export { WPTaxonomy as a };
